{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{187:function(t,s,a){\"use strict\";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"content\"},[a(\"h1\",{attrs:{id:\"javascript闭包\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#javascript闭包\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" javascript闭包\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"执行上下文\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#执行上下文\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 执行上下文\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"第一种情况，变量声明，默认赋值为undefined\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第一种情况，变量声明，默认赋值为undefined\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 第一种情况，变量声明，默认赋值为undefined\")]),t._v(\" \"),a(\"p\",[t._v(\"首先我们在浏览器控制台来调试一段代码\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Uncaught ReferenceError: a is not defined\")]),t._v(\"\\n\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// undefined\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a\\n\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// undefined\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"第一个打印报错，因为a未定义。第二个、第三个输出都是undefined，说明浏览器在执行console.log(a)时，已经知道了a是undefined，但却不知道a是10（第三句中）。\")]),t._v(\" \"),a(\"p\",[t._v(\"在一段js代码运行前，浏览器会做一些“准备工作”，其中就包括对变量的的声明，而不是赋值。\")]),t._v(\" \"),a(\"p\",[t._v(\"变量赋值是在赋值语句执行的时候进行的。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 首先声明a, 默认值为undefined\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 给a赋值为10\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"第二种情况，直接给this赋值\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第二种情况，直接给this赋值\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 第二种情况，直接给this赋值\")]),t._v(\" \"),a(\"p\",[t._v(\"我们知道无论在哪个位置获取this都是有值的。通常来讲this指向对应的执行环境，具体的下面会花专门一章来讲解this。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Window {postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, parent: Window, …}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"与第一种情况不同的是第一种只是对变量进行了声明，并没有赋值。而这种情况直接给this赋值。这也是“准备工作”情况要做的事情之一。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"另外还有第三种情况-函数声明和函数表达式。\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#另外还有第三种情况-函数声明和函数表达式。\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 另外还有第三种情况, \"),a(\"code\",[t._v(\"函数声明\")]),t._v(\"和\"),a(\"code\",[t._v(\"函数表达式\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"虽然两者都很常用，但是这两者在“准备工作”时，却是两种不同的情况。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"f1\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// ƒ f1() {}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 函数声明\")]),t._v(\"\\n\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"f2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// undefined\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"f2\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 函数表达式\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"以上代码“函数声明”我们看到了第二种情况，直接给f1赋值了。而函数表达式则是第一种情况。\\n在“准备工作”中对待函数表达式，就像对待\"),a(\"code\",[t._v(\"var a = 10\")]),t._v(\"这样的变量一样，只是声明。而对待函数声明时，却把函数整个赋值了。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"总结下在“准备工作”中完成了哪些工作\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结下在“准备工作”中完成了哪些工作\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 总结下在“准备工作”中完成了哪些工作\")]),t._v(\" \"),a(\"div\",{staticClass:\"warning custom-block\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"重点提示\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"变量、函数表达式——变量声明，默认赋值为undefined。\")]),t._v(\" \"),a(\"li\",[t._v(\"this——赋值。\")]),t._v(\" \"),a(\"li\",[t._v(\"函数声明——赋值。\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"这三种数据的准备情况我们称之为“执行上下文”或者“执行上下文环境”。\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#这三种数据的准备情况我们称之为“执行上下文”或者“执行上下文环境”。\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 这三种数据的准备情况我们称之为“执行上下文”或者“执行上下文环境”。\")])]),t._v(\" \"),a(\"p\",[t._v(\"上面所有的例子都是在全局环境下执行的。在js执行一段代码前，都会进行这些“准备工作”来生成执行上下文。\\n\"),a(\"strong\",[t._v(\"这个“代码段”其实分三种情况——全局代码，函数体，eval代码。\")])]),t._v(\" \"),a(\"p\",[t._v(\"什么是代码段？就是一段文本形式的代码。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"首先，全局代码是一种，就是手写文本到-script-标签里面的。\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#首先，全局代码是一种，就是手写文本到-script-标签里面的。\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 首先，全局代码是一种，就是手写文本到\"),a(\"code\",[t._v(\"<script>\")]),t._v(\"标签里面的。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"script type\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"text/javascript\"')]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 代码段...\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"script\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"其次，eval代码接收的也是一段文本形式的代码-eval不常用，不推荐-。\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#其次，eval代码接收的也是一段文本形式的代码-eval不常用，不推荐-。\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 其次，eval代码接收的也是一段文本形式的代码(eval不常用，不推荐)。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"eval\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'alert(123)'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),a(\"h4\",{attrs:{id:\"最后，函数体是代码段是因为函数在创建时，本质上是-new-function-…-得来的，其中需要传入一个文本形式的参数作为函数体。\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#最后，函数体是代码段是因为函数在创建时，本质上是-new-function-…-得来的，其中需要传入一个文本形式的参数作为函数体。\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 最后，函数体是代码段是因为函数在创建时，本质上是 new Function(…) 得来的，其中需要传入一个文本形式的参数作为函数体。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fn\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"x\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\tconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" fn \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'x'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'console.log(x)'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])])])}],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}